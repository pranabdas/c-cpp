"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([[596],{8611:(n,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>v,frontMatter:()=>l,metadata:()=>_,toc:()=>u});var e=t(7462),i=(t(7294),t(3905)),c=t(5488),s=t(5162),o=t(814);const l={title:"Static storage"},r=void 0,_={unversionedId:"basics/static-storage",id:"basics/static-storage",title:"Static storage",description:"",source:"@site/docs/basics/static-storage.mdx",sourceDirName:"basics",slug:"/basics/static-storage",permalink:"/c-cpp/basics/static-storage",draft:!1,editUrl:"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/static-storage.mdx",tags:[],version:"current",frontMatter:{title:"Static storage"},sidebar:"docs",previous:{title:"Recursion",permalink:"/c-cpp/basics/recursion"},next:{title:"Array and Pointer",permalink:"/c-cpp/category/array-and-pointer"}},d={},u=[],p={toc:u};function v(n){let{components:a,...t}=n;return(0,i.kt)("wrapper",(0,e.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)(c.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"C",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"c",title:"src/c/basics/07-static-storage.c",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <stdio.h>\n\n// variables declared in the file scope are static\nint global_var = 0;\n\nvoid increase_global_var()\n{\n    global_var++;\n    printf("global var called %d times\\n", global_var);\n}\n\nvoid increase_static_var()\n{\n    // static variable are initialized to 0, and initialized once\n    static int static_var = 0;\n    static_var++;\n    printf("static var called %d times\\n", static_var);\n}\n\nvoid increase_local_var()\n{\n    int local_var = 0;\n    local_var++;\n    printf("local var called %d times\\n", local_var);\n}\n\nint main()\n{\n    increase_global_var();\n    increase_global_var();\n\n    increase_static_var();\n    increase_static_var();\n    \n    increase_local_var();\n    increase_local_var();\n    \n    return 0;\n}\n')),(0,i.kt)(s.Z,{value:"C++",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"cpp",title:"src/cpp/basics/07-static-storage.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <iostream>\nusing namespace std;\n\n// variables declared in the file scope are static by default\n// and initialized to zero.\nint no_of_calls;\n\nvoid increase_count()\n{\n    no_of_calls++;\n    cout << "The function is called " << no_of_calls << " time(s)" << endl;\n}\n\nvoid increase_count_static()\n{\n    static int static_no_of_calls = 0;\n    // by default static objects are initialized to zero\n    // even if we initialize, it will be initialized only once\n    static_no_of_calls++;\n    cout << "The static function is called " << static_no_of_calls\n         << " time(s)" << endl;\n}\n\nvoid increase_count_volatile()\n{\n    int volatile_no_of_calls = 0;\n    volatile_no_of_calls++;\n    cout << "The volatile function is called " << volatile_no_of_calls\n         << " time(s)" << endl;\n}\n\nint main()\n{\n    increase_count();\n    increase_count();\n    cout << endl;\n\n    increase_count_static();\n    increase_count_static();\n    cout << endl;\n\n    increase_count_volatile();\n    increase_count_volatile();\n\n    return 0;\n}\n'))))}v.isMDXComponent=!0}}]);