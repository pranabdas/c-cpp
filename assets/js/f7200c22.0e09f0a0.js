"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([["1138"],{9360:function(n,t,i){i.r(t),i.d(t,{default:()=>u,frontMatter:()=>c,metadata:()=>e,assets:()=>d,toc:()=>p,contentTitle:()=>o});var e=JSON.parse('{"id":"misc/bit-shifting","title":"Bit shifting","description":"","source":"@site/docs/misc/bit-shifting.mdx","sourceDirName":"misc","slug":"/misc/bit-shifting","permalink":"/c-cpp/misc/bit-shifting","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/c-cpp/blob/main/docs/misc/bit-shifting.mdx","tags":[],"version":"current","frontMatter":{"title":"Bit shifting"},"sidebar":"docs","previous":{"title":"Argument parsing","permalink":"/c-cpp/misc/arg-parsing"},"next":{"title":"Multiple return","permalink":"/c-cpp/misc/multiple-return"}}'),s=i("5893"),a=i("65"),r=i("5056");let c={title:"Bit shifting"},o=void 0,d={},p=[];function l(n){return(0,s.jsx)(r.Z,{language:"cpp",title:"src/cpp/misc/02-bit-shift.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a = 5; // 0b101\n    int b, c;\n    // bit shift operation only valid for integer\n    b = a << 3; // same as a * 2^3 (0b101000)\n    c = a >> 1; // 0b10, same as integer division by 2 (rounds toward negative\n                // infinity, in contrast modulo division rounds towards 0)\n\n    cout << a << endl;\n    cout << b << endl;\n    cout << c << endl;\n\n    // encode year, month, day in a single number\n    unsigned int year, month, day, date;\n    year = 1947;\n    month = 8;\n    day = 15;\n\n    // use 5 bits for day, 4 bits for month\n    date = (((year << 4) + month) << 5) + day;\n\n    day = date % 32;\n    month = (date >> 5) % 16;\n    year = date >> 9;\n\n    cout << day << "/" << month << "/" << year << endl;\n\n    return 0;\n}\n'})}function u(n={}){let{wrapper:t}={...(0,a.a)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}}}]);