"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([["9487"],{9591:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>o,toc:()=>p,default:()=>h,metadata:()=>r,assets:()=>d,contentTitle:()=>u});var r=JSON.parse('{"id":"basics/control-flow","title":"Control flow","description":"if-else","source":"@site/docs/basics/control-flow.mdx","sourceDirName":"basics","slug":"/basics/control-flow","permalink":"/c-cpp/basics/control-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/control-flow.mdx","tags":[],"version":"current","frontMatter":{"title":"Control flow"},"sidebar":"docs","previous":{"title":"Basic data types","permalink":"/c-cpp/basics/data-types"},"next":{"title":"Loop","permalink":"/c-cpp/basics/loop"}}'),t=a(4848),i=a(4429),s=a(4109),l=a(3703),c=a(4565);let o={title:"Control flow"},u=void 0,d={},p=[{value:"if-else",id:"if-else",level:2},{value:"switch",id:"switch",level:2},{value:"Ternary operator",id:"ternary-operator",level:2}];function f(e){let n={h2:"h2",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"if-else",children:"if-else"}),"\n","\n",(0,t.jsxs)(s.A,{groupId:"language",children:[(0,t.jsx)(l.A,{value:"C",children:(0,t.jsx)(c.A,{language:"c",title:"src/c/basics/03-if-else.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int age = 0;\n\n    printf("Please enter your age in years: ");\n    scanf("%d", &age);\n\n    if (age <= 18)\n        printf("You are not an adult.\\n");\n    else if (age < 65)\n        printf("You are an adult.\\n");\n    else\n        printf("You are a senior citizen.\\n");\n\n    return 0;\n}\n'})}),(0,t.jsx)(l.A,{value:"C++",children:(0,t.jsx)(c.A,{language:"cpp",title:"src/cpp/basics/03-if-else.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a = 6;\n    int b = 5;\n\n    if (a > b)\n    {\n        cout << "a is greater than b" << endl;\n    }\n    else if (a < b)\n    {\n        cout << "a is less than b" << endl;\n    }\n    else\n    {\n        cout << "a is equal to b" << endl;\n    }\n\n    return 0;\n}\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"switch",children:"switch"}),"\n",(0,t.jsxs)(s.A,{groupId:"language",children:[(0,t.jsx)(l.A,{value:"C",children:(0,t.jsx)(c.A,{language:"c",title:"src/c/basics/03-switch.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int age = 0, category;\n\n    printf("Please enter your age in years: ");\n    scanf("%d", &age);\n\n    if (age < 0)\n        category = 0;\n    else if (age <= 18)\n        category = 1;\n    else if (age < 65)\n        category = 2;\n    else\n        category = 3;\n\n    switch (category)\n    {\n    case 0:\n        printf("Invalid age.\\n");\n        break;\n    case 1:\n        printf("You are not an adult.\\n");\n        break;\n    case 2:\n        printf("You are an adult.\\n");\n        break;\n    case 3:\n        printf("You are a senior citizen.\\n");\n        break;\n\n    default:\n        printf("Should not be necessary here.\\n");\n        break;\n    }\n\n    return 0;\n}\n'})}),(0,t.jsx)(l.A,{value:"C++",children:(0,t.jsx)(c.A,{language:"cpp",title:"src/cpp/basics/03-switch.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int age = 0, category;\n\n    cout << "Please enter your age in years: ";\n    cin >> age;\n\n    if (age < 0)\n        category = 0;\n    else if (age <= 18)\n        category = 1;\n    else if (age < 65)\n        category = 2;\n    else\n        category = 3;\n\n    switch (category)\n    {\n    case 0:\n        cout << "Invalid age." << endl;\n        break;\n    case 1:\n        cout << "You are not an adult." << endl;\n        break;\n    case 2:\n        cout << "You are an adult." << endl;\n        break;\n    case 3:\n        cout << "You are a senior citizen." << endl;\n        break;\n\n    default:\n        cout << "Should not be necessary here." << endl;\n        break;\n    }\n\n    return 0;\n}\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"ternary-operator",children:"Ternary operator"}),"\n",(0,t.jsxs)(s.A,{groupId:"language",children:[(0,t.jsx)(l.A,{value:"C",children:(0,t.jsx)(c.A,{language:"c",title:"src/c/basics/03-ternary.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int input1, input2, big;\n    printf("Enter two integer numbers (separated by space): ");\n    scanf("%d%d", &input1, &input2);\n\n    big = (input1 > input2) ? input1 : input2;\n\n    printf("Biggest number = %d\\n", big);\n    return 0;\n}\n'})}),(0,t.jsx)(l.A,{value:"C++",children:(0,t.jsx)(c.A,{language:"cpp",title:"src/cpp/basics/03-ternary.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int x = 5;\n    int y = 9;\n\n    const char *s = x > y ? "Yes" : "No";\n\n    cout << s << endl;\n    return 0;\n}\n'})})]})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},3703:function(e,n,a){a.d(n,{A:()=>i});var r=a(4848);a(6540);var t=a(9836);function i({children:e,hidden:n,className:a}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)("tabItem_Ymn6",a),hidden:n,children:e})}},4109:function(e,n,a){a.d(n,{A:()=>v});var r=a(4848),t=a(6540),i=a(9836),s=a(8251),l=a(6347),c=a(8004),o=a(5580),u=a(2213),d=a(5734);function p(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function f({value:e,tabValues:n}){return n.some(n=>n.value===e)}var h=a(8864);function b({className:e,block:n,selectedValue:a,selectValue:t,tabValues:l}){let c=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),u=e=>{let n=e.currentTarget,r=l[c.indexOf(n)].value;r!==a&&(o(n),t(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{let a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:t})=>(0,r.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{c.push(e)},onKeyDown:d,onClick:u,...t,className:(0,i.A)("tabs__item","tabItem_LNqP",t?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:a}){let s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=s.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function m(e){let n=function(e){let{defaultValue:n,queryString:a=!1,groupId:r}=e,i=function(e){let{values:n,children:a}=e;return(0,t.useMemo)(()=>{let e=n??p(a).map(({props:{value:e,label:n,attributes:a,default:r}})=>({value:e,label:n,attributes:a,default:r})),r=(0,u.XI)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,a])}(e),[s,h]=(0,t.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let a=n.find(e=>e.default)??n[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:i})),[b,g]=function({queryString:e=!1,groupId:n}){let a=(0,l.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})},[r,a])]}({queryString:a,groupId:r}),[m,v]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[a,r]=(0,d.Dv)(n);return[a,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),y=(()=>{let e=b??m;return f({value:e,tabValues:i})?e:null})();return(0,c.A)(()=>{y&&h(y)},[y]),{selectedValue:s,selectValue:(0,t.useCallback)(e=>{if(!f({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);h(e),g(e),v(e)},[g,v,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.A)("tabs-container","tabList__CuJ"),children:[(0,r.jsx)(b,{...n,...e}),(0,r.jsx)(g,{...n,...e})]})}function v(e){let n=(0,h.A)();return(0,r.jsx)(m,{...e,children:p(e.children)},String(n))}}}]);