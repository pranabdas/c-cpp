"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([[312],{5162:(n,e,t)=>{t.d(e,{Z:()=>l});var i=t(7294),o=t(6010);const a="tabItem_Ymn6";function l(n){let{children:e,hidden:t,className:l}=n;return i.createElement("div",{role:"tabpanel",className:(0,o.Z)(a,l),hidden:t},e)}},5488:(n,e,t)=>{t.d(e,{Z:()=>m});var i=t(7462),o=t(7294),a=t(6010),l=t(2389),r=t(7392),s=t(7094),c=t(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(n){var e;const{lazy:t,block:l,defaultValue:d,values:m,groupId:b,className:h}=n,f=o.Children.map(n.children,(n=>{if((0,o.isValidElement)(n)&&"value"in n.props)return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=m??f.map((n=>{let{props:{value:e,label:t,attributes:i}}=n;return{value:e,label:t,attributes:i}})),k=(0,r.l)(v,((n,e)=>n.value===e.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const w=null===d?d:d??(null==(e=f.find((n=>n.props.default)))?void 0:e.props.value)??f[0].props.value;if(null!==w&&!v.some((n=>n.value===w)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${w}" but none of its children has the corresponding value. Available values are: ${v.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:T}=(0,s.U)(),[y,x]=(0,o.useState)(w),Z=[],{blockElementScrollPositionUntilNextRender:C}=(0,c.o5)();if(null!=b){const n=g[b];null!=n&&n!==y&&v.some((e=>e.value===n))&&x(n)}const N=n=>{const e=n.currentTarget,t=Z.indexOf(e),i=v[t].value;i!==y&&(C(e),x(i),null!=b&&T(b,String(i)))},E=n=>{var e;let t=null;switch(n.key){case"ArrowRight":{const e=Z.indexOf(n.currentTarget)+1;t=Z[e]??Z[0];break}case"ArrowLeft":{const e=Z.indexOf(n.currentTarget)-1;t=Z[e]??Z[Z.length-1];break}}null==(e=t)||e.focus()};return o.createElement("div",{className:(0,a.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":l},h)},v.map((n=>{let{value:e,label:t,attributes:l}=n;return o.createElement("li",(0,i.Z)({role:"tab",tabIndex:y===e?0:-1,"aria-selected":y===e,key:e,ref:n=>Z.push(n),onKeyDown:E,onFocus:N,onClick:N},l,{className:(0,a.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":y===e})}),t??e)}))),t?(0,o.cloneElement)(f.filter((n=>n.props.value===y))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},f.map(((n,e)=>(0,o.cloneElement)(n,{key:e,hidden:n.props.value!==y})))))}function m(n){const e=(0,l.Z)();return o.createElement(d,(0,i.Z)({key:String(e)},n))}},746:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>b,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var i=t(7462),o=(t(7294),t(3905)),a=t(5488),l=t(5162),r=t(814);const s={title:"Loop"},c=void 0,u={unversionedId:"basics/loop",id:"basics/loop",title:"Loop",description:"while (and do while) loop",source:"@site/docs/basics/loop.mdx",sourceDirName:"basics",slug:"/basics/loop",permalink:"/c-cpp/basics/loop",draft:!1,editUrl:"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/loop.mdx",tags:[],version:"current",frontMatter:{title:"Loop"},sidebar:"docs",previous:{title:"Control flow",permalink:"/c-cpp/basics/control-flow"},next:{title:"Function",permalink:"/c-cpp/basics/function"}},p={},d=[{value:"while (and do while) loop",id:"while-and-do-while-loop",level:2},{value:"for loop",id:"for-loop",level:2},{value:"Break and continue",id:"break-and-continue",level:2}],m={toc:d};function b(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,i.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"while-and-do-while-loop"},"while (and do while) loop"),(0,o.kt)(a.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"C",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"c",title:"src/c/basics/04-while-loop.c",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <stdio.h>\n\nint main()\n{\n    int i = 1, i2 = 0;\n\n    while (i < 10)\n    {\n        i2 = i * i;\n        printf("%d\\t%d\\n", i, i2);\n        i++;\n    }\n\n    // do while loop\n    printf("\\nExample of do-while loop:\\n");\n    i = 1;\n    do\n    {\n        i2 = i * i;\n        printf("%d\\t%d\\n", i, i2);\n        i++;\n    } while (i < 10);\n\n    return 0;\n}\n')),(0,o.kt)(l.Z,{value:"C++",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"cpp",title:"src/cpp/basics/04-while-loop.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int i = 1;\n\n    while (i <= 10)\n    {\n        cout << i << "\\t" << i * i << endl;\n        ++i;\n    }\n\n    cout << endl;\n\n    // do while loop\n    i = 1;\n    do\n    {\n        cout << i << "\\t" << i * i * i << endl;\n        ++i;\n    } while (i <= 10);\n\n    return 0;\n}\n'))),(0,o.kt)("h2",{id:"for-loop"},"for loop"),(0,o.kt)(a.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"C",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"c",title:"src/c/basics/04-for-loop.c",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <stdio.h>\n\nint main()\n{\n    int i = 10;\n    int i2 = 0;\n\n    for (i = 1; i < 10; i++)\n    {\n        i2 = i * i;\n        printf("%d\\t%d\\n", i, i2);\n    }\n    \n    return 0;\n}\n')),(0,o.kt)(l.Z,{value:"C++",mdxType:"TabItem"},(0,o.kt)(r.Z,{language:"cpp",title:"src/cpp/basics/04-for-loop.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int i;\n    cout << "For loop variant 1:\\n";\n    for (i = 0; i < 5; i++)\n    {\n        cout << i << endl;\n    }\n\n    int j = 0;\n    cout << "\\nFor loop variant 2:\\n";\n    for (; j < 5; j++) // since j is already initialized, loop condition can\n                       // start with null statement\n    {\n        cout << j << endl;\n    }\n\n    cout << "\\nFor loop variant 3:\\n";\n    for (int k = 0; k < 5; k++) // loop variable can be locally declared\n    {\n        cout << k << endl;\n    }\n\n    int size = 5;\n    int arr[5] = {1, 2, 3, 4, 5};\n    int sum = 0;\n    for (int i = 0; i < size;)\n    {\n        sum += arr[i++]; // post increment i after accessing array element\n    }\n\n    cout << "sum = " << sum << endl;\n\n    return 0;\n}\n'))),(0,o.kt)("h2",{id:"break-and-continue"},"Break and continue"),(0,o.kt)(r.Z,{language:"cpp",title:"src/cpp/basics/04-break-continue.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},"#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int i = 0;\n\n    for (;;) // forever for loop\n    {\n        i++;\n\n        if (i > 10)\n            break;\n\n        if ((i % 2) == 0)\n        {\n            continue; // jumps to the loop beginning\n        }\n        else\n        {\n            cout << i << endl; // print odd numbers\n        }\n    }\n\n    return 0;\n}\n"))}b.isMDXComponent=!0}}]);