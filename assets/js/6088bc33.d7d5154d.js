"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([[312],{1989:(n,i,o)=>{o.r(i),o.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>p,metadata:()=>r,toc:()=>u});var e=o(7462),t=(o(7294),o(3905)),l=o(5488),a=o(5162),c=o(814);const p={title:"Loop"},s=void 0,r={unversionedId:"basics/loop",id:"basics/loop",title:"Loop",description:"while (and do while) loop",source:"@site/docs/basics/loop.mdx",sourceDirName:"basics",slug:"/basics/loop",permalink:"/c-cpp/basics/loop",draft:!1,editUrl:"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/loop.mdx",tags:[],version:"current",frontMatter:{title:"Loop"},sidebar:"docs",previous:{title:"Control flow",permalink:"/c-cpp/basics/control-flow"},next:{title:"Function",permalink:"/c-cpp/basics/function"}},d={},u=[{value:"while (and do while) loop",id:"while-and-do-while-loop",level:2},{value:"for loop",id:"for-loop",level:2}],m={toc:u};function h(n){let{components:i,...o}=n;return(0,t.kt)("wrapper",(0,e.Z)({},m,o,{components:i,mdxType:"MDXLayout"}),(0,t.kt)("h2",{id:"while-and-do-while-loop"},"while (and do while) loop"),(0,t.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,t.kt)(a.Z,{value:"C",mdxType:"TabItem"},(0,t.kt)(c.Z,{language:"c",title:"src/c/basics/04-while-loop.c",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <stdio.h>\n\nint main()\n{\n    int i = 1, i2 = 0;\n\n    while (i < 10)\n    {\n        i2 = i * i;\n        printf("%d\\t%d\\n", i, i2);\n        i++;\n    }\n\n    // do while loop\n    printf("\\nExample of do-while loop:\\n");\n    i = 1;\n    do\n    {\n        i2 = i * i;\n        printf("%d\\t%d\\n", i, i2);\n        i++;\n    } while (i < 10);\n\n    return 0;\n}\n')),(0,t.kt)(a.Z,{value:"C++",mdxType:"TabItem"},(0,t.kt)(c.Z,{language:"cpp",title:"src/cpp/basics/04-while-loop.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int i = 1;\n\n    while (i <= 10)\n    {\n        cout << i << "\\t" << i * i << endl;\n        ++i;\n    }\n\n    cout << endl;\n\n    // do while loop\n    i = 1;\n    do\n    {\n        cout << i << "\\t" << i * i * i << endl;\n        ++i;\n    } while (i <= 10);\n\n    return 0;\n}\n'))),(0,t.kt)("h2",{id:"for-loop"},"for loop"),(0,t.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,t.kt)(a.Z,{value:"C",mdxType:"TabItem"},(0,t.kt)(c.Z,{language:"c",title:"src/c/basics/04-for-loop.c",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <stdio.h>\n\nint main()\n{\n    int i = 10;\n    int i2 = 0;\n\n    for (i = 1; i < 10; i++)\n    {\n        i2 = i * i;\n        printf("%d\\t%d\\n", i, i2);\n    }\n    \n    return 0;\n}\n')),(0,t.kt)(a.Z,{value:"C++",mdxType:"TabItem"},(0,t.kt)(c.Z,{language:"cpp",title:"src/cpp/basics/04-for-loop.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int i;\n    cout << "For loop variant 1:\\n";\n    for (i = 0; i < 5; i++)\n    {\n        cout << i << endl;\n    }\n\n    int j = 0;\n    cout << "\\nFor loop variant 2:\\n";\n    for (; j < 5; j++) // since j is already initialized, loop condition can\n                       // start with null statement\n    {\n        cout << j << endl;\n    }\n\n    cout << "\\nFor loop variant 3:\\n";\n    for (int k = 0; k < 5; k++) // loop variable can be locally declared\n    {\n        cout << k << endl;\n    }\n\n    int size = 5;\n    int arr[5] = {1, 2, 3, 4, 5};\n    int sum = 0;\n    for (int i = 0; i < size;)\n    {\n        sum += arr[i++]; // post increment i after accessing array element\n    }\n\n    cout << "sum = " << sum << endl;\n\n    return 0;\n}\n'))))}h.isMDXComponent=!0}}]);