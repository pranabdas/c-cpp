"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([["8846"],{5281:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>u,default:()=>m,toc:()=>p,metadata:()=>r,assets:()=>d,contentTitle:()=>c});var r=JSON.parse('{"id":"basics/add-two-integers","title":"Add two integers","description":"In the following program, we will ask the user to enter two integer inputs. The","source":"@site/docs/basics/add-two-integers.mdx","sourceDirName":"basics","slug":"/basics/add-two-integers","permalink":"/c-cpp/basics/add-two-integers","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/add-two-integers.mdx","tags":[],"version":"current","frontMatter":{"title":"Add two integers"},"sidebar":"docs","previous":{"title":"Hello world","permalink":"/c-cpp/basics/hello-world"},"next":{"title":"Basic data types","permalink":"/c-cpp/basics/data-types"}}'),a=t(5893),i=t(65),s=t(7902),l=t(5525),o=t(2834);let u={title:"Add two integers"},c=void 0,d={},p=[];function h(e){let n={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"In the following program, we will ask the user to enter two integer inputs. The\nprograms will calculate and print the sum of two numbers."}),"\n","\n",(0,a.jsxs)(s.Z,{groupId:"language",children:[(0,a.jsx)(l.Z,{value:"C",children:(0,a.jsx)(o.Z,{language:"c",title:"src/c/basics/01-add-two-integers.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int input1, input2, sum;\n\n    printf("Enter input 1: ");\n    scanf("%d", &input1);\n\n    printf("Enter input 2: ");\n    scanf("%d", &input2);\n\n    sum = input1 + input2;\n\n    printf("%d + %d = %d\\n", input1, input2, sum);\n\n    return 0;\n}\n'})}),(0,a.jsx)(l.Z,{value:"C++",children:(0,a.jsx)(o.Z,{language:"cpp",title:"src/cpp/basics/01-add-two-integers.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n// above declaration exposes all the methods described in the std namespace\n// so that we can use cout instead of std::cout. Beware that in large\n// applications there could be naming conflict among various imported headers.\n// We can either use the convention std::cout or declare only the methods we\n// need:\n// using std::cout;\n\nint main()\n{\n    int input1, input2, sum;\n\n    cout << "Enter input 1: ";\n    cin >> input1;\n\n    cout << "Enter input 2: ";\n    cin >> input2;\n\n    sum = input1 + input2;\n\n    cout << input1 << " + " << input2 << " = " << sum << endl;\n\n    return 0;\n}\n'})})]}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"int a = 123456789;\nlong long b = a * a; // this is wrong, a * a will result in int type\nlong long c = (long long) a * a; // or change the type of a to long long\n"})})}),"\n",(0,a.jsxs)(n.admonition,{type:"caution",children:[(0,a.jsxs)(n.p,{children:["It is risky to compare floating point numbers with ",(0,a.jsx)(n.code,{children:"=="})," due to precision errors.\nBetter approach is to check the difference is less than a small number:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"if (abs(a - b) < 1e-9)\n{\n    // a and b are equal\n}\n"})})]})]})}function m(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},5525:function(e,n,t){t.d(n,{Z:()=>i});var r=t(5893);t(7294);var a=t(7026);function i({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)("tabItem_Ymn6",t),hidden:n,children:e})}},7902:function(e,n,t){t.d(n,{Z:()=>w});var r=t(5893),a=t(7294),i=t(7026),s=t(9599),l=t(6550),o=t(2e3),u=t(4520),c=t(8341),d=t(6009);function p(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}var m=t(7227);function f({className:e,block:n,selectedValue:t,selectValue:a,tabValues:l}){let o=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.o5)(),c=e=>{let n=e.currentTarget,r=l[o.indexOf(n)].value;r!==t&&(u(n),a(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{let t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{let t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:a})=>(0,r.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...a,className:(0,i.Z)("tabs__item","tabItem_LNqP",a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:t}){let s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=s.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function g(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:r}=e,i=function(e){let{values:n,children:t}=e;return(0,a.useMemo)(()=>{let e=n??p(t).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})),r=(0,c.lx)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[s,m]=(0,a.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:n,tabValues:i})),[f,b]=function({queryString:e=!1,groupId:n}){let t=(0,l.k6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u._X)(r),(0,a.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}({queryString:t,groupId:r}),[g,w]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,r]=(0,d.Nk)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),v=(()=>{let e=f??g;return h({value:e,tabValues:i})?e:null})();return(0,o.Z)(()=>{v&&m(v)},[v]),{selectedValue:s,selectValue:(0,a.useCallback)(e=>{if(!h({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);m(e),b(e),w(e)},[b,w,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,r.jsx)(f,{...n,...e}),(0,r.jsx)(b,{...n,...e})]})}function w(e){let n=(0,m.Z)();return(0,r.jsx)(g,{...e,children:p(e.children)},String(n))}}}]);