"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([["1191"],{1106:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>o,default:()=>v,toc:()=>f,metadata:()=>t,assets:()=>d,contentTitle:()=>u});var t=JSON.parse('{"id":"basics/static-storage","title":"Static storage","description":"","source":"@site/docs/basics/static-storage.mdx","sourceDirName":"basics","slug":"/basics/static-storage","permalink":"/c-cpp/basics/static-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/static-storage.mdx","tags":[],"version":"current","frontMatter":{"title":"Static storage"},"sidebar":"docs","previous":{"title":"Recursion","permalink":"/c-cpp/basics/recursion"},"next":{"title":"Array and Pointer","permalink":"/c-cpp/category/array-and-pointer"}}'),r=a(5893),i=a(65),l=a(7902),s=a(5525),c=a(2834);let o={title:"Static storage"},u=void 0,d={},f=[];function p(e){return(0,r.jsxs)(l.Z,{groupId:"language",children:[(0,r.jsx)(s.Z,{value:"C",children:(0,r.jsx)(c.Z,{language:"c",title:"src/c/basics/07-static-storage.c",showLineNumbers:!0,children:'#include <stdio.h>\n\n// variables declared in the file scope are static\nint global_var = 0;\n\nvoid increase_global_var()\n{\n    global_var++;\n    printf("global var called %d times\\n", global_var);\n}\n\nvoid increase_static_var()\n{\n    // static variable are initialized to 0, and initialized once\n    static int static_var = 0;\n    static_var++;\n    printf("static var called %d times\\n", static_var);\n}\n\nvoid increase_local_var()\n{\n    int local_var = 0;\n    local_var++;\n    printf("local var called %d times\\n", local_var);\n}\n\nint main()\n{\n    increase_global_var();\n    increase_global_var();\n\n    increase_static_var();\n    increase_static_var();\n    \n    increase_local_var();\n    increase_local_var();\n    \n    return 0;\n}\n'})}),(0,r.jsx)(s.Z,{value:"C++",children:(0,r.jsx)(c.Z,{language:"cpp",title:"src/cpp/basics/07-static-storage.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\n// variables declared in the file scope are static by default\n// and initialized to zero.\nint no_of_calls;\n\nvoid increase_count()\n{\n    no_of_calls++;\n    cout << "The function is called " << no_of_calls << " time(s)" << endl;\n}\n\nvoid increase_count_static()\n{\n    static int static_no_of_calls = 0;\n    // by default static objects are initialized to zero\n    // even if we initialize, it will be initialized only once\n    static_no_of_calls++;\n    cout << "The static function is called " << static_no_of_calls\n         << " time(s)" << endl;\n}\n\nvoid increase_count_volatile()\n{\n    int volatile_no_of_calls = 0;\n    volatile_no_of_calls++;\n    cout << "The volatile function is called " << volatile_no_of_calls\n         << " time(s)" << endl;\n}\n\nint main()\n{\n    increase_count();\n    increase_count();\n    cout << endl;\n\n    increase_count_static();\n    increase_count_static();\n    cout << endl;\n\n    increase_count_volatile();\n    increase_count_volatile();\n\n    return 0;\n}\n'})})]})}function v(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},5525:function(e,n,a){a.d(n,{Z:()=>i});var t=a(5893);a(7294);var r=a(7026);function i({children:e,hidden:n,className:a}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_Ymn6",a),hidden:n,children:e})}},7902:function(e,n,a){a.d(n,{Z:()=>m});var t=a(5893),r=a(7294),i=a(7026),l=a(9599),s=a(6550),c=a(2e3),o=a(4520),u=a(8341),d=a(6009);function f(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}var v=a(7227);function _({className:e,block:n,selectedValue:a,selectValue:r,tabValues:s}){let c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.o5)(),u=e=>{let n=e.currentTarget,t=s[c.indexOf(n)].value;t!==a&&(o(n),r(t))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{let a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1]}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:r})=>(0,t.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{c.push(e)},onKeyDown:d,onClick:u,...r,className:(0,i.Z)("tabs__item","tabItem_LNqP",r?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:a}){let l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=l.find(e=>e.props.value===a);return e?(0,r.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function h(e){let n=function(e){let{defaultValue:n,queryString:a=!1,groupId:t}=e,i=function(e){let{values:n,children:a}=e;return(0,r.useMemo)(()=>{let e=n??f(a).map(({props:{value:e,label:n,attributes:a,default:t}})=>({value:e,label:n,attributes:a,default:t})),t=(0,u.lx)(e,(e,n)=>e.value===n.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,a])}(e),[l,v]=(0,r.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let a=n.find(e=>e.default)??n[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:i})),[_,b]=function({queryString:e=!1,groupId:n}){let a=(0,s.k6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o._X)(t),(0,r.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(a.location.search);n.set(t,e),a.replace({...a.location,search:n.toString()})},[t,a])]}({queryString:a,groupId:t}),[h,m]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[a,t]=(0,d.Nk)(n);return[a,(0,r.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),g=(()=>{let e=_??h;return p({value:e,tabValues:i})?e:null})();return(0,c.Z)(()=>{g&&v(g)},[g]),{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);v(e),b(e),m(e)},[b,m,i]),tabValues:i}}(e);return(0,t.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,t.jsx)(_,{...n,...e}),(0,t.jsx)(b,{...n,...e})]})}function m(e){let n=(0,v.Z)();return(0,t.jsx)(h,{...e,children:f(e.children)},String(n))}}}]);