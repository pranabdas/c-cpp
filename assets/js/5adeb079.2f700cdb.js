"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([[2734],{5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const s={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),r=n(7294),s=n(6010),i=n(2466),o=n(6550),l=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[l,u]=b({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),g=(()=>{const e=l??d;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var g=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==o&&(d(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,s.Z)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",h.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},3055:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>p,toc:()=>b});var a=n(7462),r=(n(7294),n(3905)),s=n(4866),i=n(5162),o=n(814);const l='#include <stdio.h>\n\nint main()\n{\n    unsigned int u_num = 8;\n    printf("Unsigned integer: %u\\n", u_num);\n\n    int num = -9;\n    printf("Integer: %d\\n", num);\n\n    long int large_num = 3988764563425;\n    printf("Large integer: %ld\\n", large_num);\n\n    float num_f = 3.14159;\n    printf("Float: %f\\n", num_f);\n\n    double num_d = 3.141592653589793;\n    printf("Double precision float: %16.15f\\n", num_d);\n\n    char c = \'a\'; // char data type must be wrapped in single quotes\n                  // double quote in c/c++ denotes string literal which is an\n                  // array of char with null terminator (\\0)\n    printf("Char: %c\\n", c);\n    printf("ASCII value of char: %d\\n", c);\n    printf("char corresponding to ascii value 98: %c\\n", 98);\n\n    char message[] = "Hello"; // string literal\n                              // same as {\'H\', \'e\', \'l\', \'l\', \'o\', \'\\0\'}\n    printf("String: %s\\n", message);\n\n    return 0;\n}\n',u='#include <iostream>\n#include <iomanip> // setprecision\nusing namespace std;\n\nint main()\n{\n    unsigned int u_num = 8;\n    cout << "Unsigned integer: " << u_num << endl;\n\n    int num = -9;\n    cout << "Integer: " << num << endl;\n\n    long int large_num = 3988764563425;\n    cout << "Large integer: " << large_num << endl;\n\n    float num_f = 3.14159;\n    cout << "Float: " << num_f << endl;\n\n    double num_d = 3.141592653589793;\n    cout << "Double precision float: " << setprecision(16) << num_d << endl;\n\n    char c = \'a\';\n    cout << "Char: " << c << endl;\n    cout << "ASCII value of char: " << int(c) << endl;\n    cout << "char corresponding to ascii value 98: " << char(98) << endl;\n\n    char message[] = "Hello";\n    cout << "String: " << message << endl;\n\n    return 0;\n}\n',c={title:"Basic data types"},d=void 0,p={unversionedId:"basics/data-types",id:"basics/data-types",title:"Basic data types",description:"C/C++ statically typed languages. Before we can store certain values in the",source:"@site/docs/basics/data-types.mdx",sourceDirName:"basics",slug:"/basics/data-types",permalink:"/c-cpp/basics/data-types",draft:!1,editUrl:"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/data-types.mdx",tags:[],version:"current",frontMatter:{title:"Basic data types"},sidebar:"docs",previous:{title:"Add two integers",permalink:"/c-cpp/basics/add-two-integers"},next:{title:"Control flow",permalink:"/c-cpp/basics/control-flow"}},m={},b=[],f={toc:b},g="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"C/C++ statically typed languages. Before we can store certain values in the\ncomputer memory, we need to declare their data types."),(0,r.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"C",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"c",title:"src/c/basics/02-data-types.c",showLineNumbers:!0,mdxType:"CodeBlock"},l)),(0,r.kt)(i.Z,{value:"C++",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"cpp",title:"src/cpp/basics/02-data-types.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},u))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"A decimal integer cannot start with ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", in that case it is considered octal\nbase. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"076")," denotes ",(0,r.kt)("inlineCode",{parentName:"p"},"63")," in decimal notation.")),(0,r.kt)("admonition",{title:"Good to know",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For numeric data types that span multiple bytes, the order of arrangement of\nbytes is important. Depending on the processor architecture, there are two\nformats: big endian and little endian."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Big endian:")," the most significant bits occupy the lower address. This\nrepresentation is used in powerpc processor."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Little endian:")," the least significant bits occupy the lower address. This\nformat is used in all ",(0,r.kt)("strong",{parentName:"p"},"x86")," compatible processors.")))}h.isMDXComponent=!0}}]);