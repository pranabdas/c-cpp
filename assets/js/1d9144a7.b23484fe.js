"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([["1372"],{9712:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,default:()=>h,toc:()=>p,metadata:()=>r,assets:()=>d,contentTitle:()=>u});var r=JSON.parse('{"id":"basics/control-flow","title":"Control flow","description":"if-else","source":"@site/docs/basics/control-flow.mdx","sourceDirName":"basics","slug":"/basics/control-flow","permalink":"/c-cpp/basics/control-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/control-flow.mdx","tags":[],"version":"current","frontMatter":{"title":"Control flow"},"sidebar":"docs","previous":{"title":"Basic data types","permalink":"/c-cpp/basics/data-types"},"next":{"title":"Loop","permalink":"/c-cpp/basics/loop"}}'),a=t(5893),i=t(65),s=t(7902),l=t(5525),c=t(2834);let o={title:"Control flow"},u=void 0,d={},p=[{value:"if-else",id:"if-else",level:2},{value:"switch",id:"switch",level:2},{value:"Ternary operator",id:"ternary-operator",level:2}];function f(e){let n={h2:"h2",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"if-else",children:"if-else"}),"\n","\n",(0,a.jsxs)(s.Z,{groupId:"language",children:[(0,a.jsx)(l.Z,{value:"C",children:(0,a.jsx)(c.Z,{language:"c",title:"src/c/basics/03-if-else.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int age = 0;\n\n    printf("Please enter your age in years: ");\n    scanf("%d", &age);\n\n    if (age <= 18)\n        printf("You are not an adult.\\n");\n    else if (age < 65)\n        printf("You are an adult.\\n");\n    else\n        printf("You are a senior citizen.\\n");\n\n    return 0;\n}\n'})}),(0,a.jsx)(l.Z,{value:"C++",children:(0,a.jsx)(c.Z,{language:"cpp",title:"src/cpp/basics/03-if-else.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a = 6;\n    int b = 5;\n\n    if (a > b)\n    {\n        cout << "a is greater than b" << endl;\n    }\n    else if (a < b)\n    {\n        cout << "a is less than b" << endl;\n    }\n    else\n    {\n        cout << "a is equal to b" << endl;\n    }\n\n    return 0;\n}\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"switch",children:"switch"}),"\n",(0,a.jsxs)(s.Z,{groupId:"language",children:[(0,a.jsx)(l.Z,{value:"C",children:(0,a.jsx)(c.Z,{language:"c",title:"src/c/basics/03-switch.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int age = 0, category;\n\n    printf("Please enter your age in years: ");\n    scanf("%d", &age);\n\n    if (age < 0)\n        category = 0;\n    else if (age <= 18)\n        category = 1;\n    else if (age < 65)\n        category = 2;\n    else\n        category = 3;\n\n    switch (category)\n    {\n    case 0:\n        printf("Invalid age.\\n");\n        break;\n    case 1:\n        printf("You are not an adult.\\n");\n        break;\n    case 2:\n        printf("You are an adult.\\n");\n        break;\n    case 3:\n        printf("You are a senior citizen.\\n");\n        break;\n\n    default:\n        printf("Should not be necessary here.\\n");\n        break;\n    }\n\n    return 0;\n}\n'})}),(0,a.jsx)(l.Z,{value:"C++",children:(0,a.jsx)(c.Z,{language:"cpp",title:"src/cpp/basics/03-switch.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int age = 0, category;\n\n    cout << "Please enter your age in years: ";\n    cin >> age;\n\n    if (age < 0)\n        category = 0;\n    else if (age <= 18)\n        category = 1;\n    else if (age < 65)\n        category = 2;\n    else\n        category = 3;\n\n    switch (category)\n    {\n    case 0:\n        cout << "Invalid age." << endl;\n        break;\n    case 1:\n        cout << "You are not an adult." << endl;\n        break;\n    case 2:\n        cout << "You are an adult." << endl;\n        break;\n    case 3:\n        cout << "You are a senior citizen." << endl;\n        break;\n\n    default:\n        cout << "Should not be necessary here." << endl;\n        break;\n    }\n\n    return 0;\n}\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"ternary-operator",children:"Ternary operator"}),"\n",(0,a.jsxs)(s.Z,{groupId:"language",children:[(0,a.jsx)(l.Z,{value:"C",children:(0,a.jsx)(c.Z,{language:"c",title:"src/c/basics/03-ternary.c",showLineNumbers:!0,children:'#include <stdio.h>\n\nint main()\n{\n    int input1, input2, big;\n    printf("Enter two integer numbers (separated by space): ");\n    scanf("%d%d", &input1, &input2);\n\n    big = (input1 > input2) ? input1 : input2;\n\n    printf("Biggest number = %d\\n", big);\n    return 0;\n}\n'})}),(0,a.jsx)(l.Z,{value:"C++",children:(0,a.jsx)(c.Z,{language:"cpp",title:"src/cpp/basics/03-ternary.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int x = 5;\n    int y = 9;\n\n    const char *s = x > y ? "Yes" : "No";\n\n    cout << s << endl;\n    return 0;\n}\n'})})]})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}},5525:function(e,n,t){t.d(n,{Z:()=>i});var r=t(5893);t(7294);var a=t(7026);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)("tabItem_Ymn6",i),hidden:t,children:n})}},7902:function(e,n,t){t.d(n,{Z:()=>v});var r=t(5893),a=t(7294),i=t(7026),s=t(9599),l=t(6550),c=t(2e3),o=t(4520),u=t(8341),d=t(6009);function p(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function f(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var h=t(7227);function b(e){let{className:n,block:t,selectedValue:a,selectValue:l,tabValues:c}=e,o=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.o5)(),d=e=>{let n=e.currentTarget,t=c[o.indexOf(n)].value;t!==a&&(u(n),l(t))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{let t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:c.map(e=>{let{value:n,label:t,attributes:s}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{o.push(e)},onKeyDown:p,onClick:d,...s,className:(0,i.Z)("tabs__item","tabItem_LNqP",s?.className,{"tabs__item--active":a===n}),children:t??n},n)})})}function g(e){let{lazy:n,children:t,selectedValue:s}=e,l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=l.find(e=>e.props.value===s);return e?(0,a.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function m(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:r}=e,i=function(e){let{values:n,children:t}=e;return(0,a.useMemo)(()=>{let e=n??p(t).map(e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}),r=(0,u.lx)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[s,h]=(0,a.useState)(()=>(function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=t.find(e=>e.default)??t[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:i})),[b,g]=function(e){let{queryString:n=!1,groupId:t}=e,r=(0,l.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(i),(0,a.useCallback)(e=>{if(!i)return;let n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})},[i,r])]}({queryString:t,groupId:r}),[m,v]=function(e){let{groupId:n}=e,t=n?`docusaurus.tab.${n}`:null,[r,i]=(0,d.Nk)(t);return[r,(0,a.useCallback)(e=>{t&&i.set(e)},[t,i])]}({groupId:r}),y=(()=>{let e=b??m;return f({value:e,tabValues:i})?e:null})();return(0,c.Z)(()=>{y&&h(y)},[y]),{selectedValue:s,selectValue:(0,a.useCallback)(e=>{if(!f({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);h(e),g(e),v(e)},[g,v,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,r.jsx)(b,{...n,...e}),(0,r.jsx)(g,{...n,...e})]})}function v(e){let n=(0,h.Z)();return(0,r.jsx)(m,{...e,children:p(e.children)},String(n))}}}]);