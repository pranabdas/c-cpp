"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([["1191"],{1106:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,default:()=>v,toc:()=>f,metadata:()=>a,assets:()=>d,contentTitle:()=>u});var a=JSON.parse('{"id":"basics/static-storage","title":"Static storage","description":"","source":"@site/docs/basics/static-storage.mdx","sourceDirName":"basics","slug":"/basics/static-storage","permalink":"/c-cpp/basics/static-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/static-storage.mdx","tags":[],"version":"current","frontMatter":{"title":"Static storage"},"sidebar":"docs","previous":{"title":"Recursion","permalink":"/c-cpp/basics/recursion"},"next":{"title":"Array and Pointer","permalink":"/c-cpp/category/array-and-pointer"}}'),r=t(5893),i=t(65),l=t(7902),s=t(5525),c=t(2834);let o={title:"Static storage"},u=void 0,d={},f=[];function p(e){return(0,r.jsxs)(l.Z,{groupId:"language",children:[(0,r.jsx)(s.Z,{value:"C",children:(0,r.jsx)(c.Z,{language:"c",title:"src/c/basics/07-static-storage.c",showLineNumbers:!0,children:'#include <stdio.h>\n\n// variables declared in the file scope are static\nint global_var = 0;\n\nvoid increase_global_var()\n{\n    global_var++;\n    printf("global var called %d times\\n", global_var);\n}\n\nvoid increase_static_var()\n{\n    // static variable are initialized to 0, and initialized once\n    static int static_var = 0;\n    static_var++;\n    printf("static var called %d times\\n", static_var);\n}\n\nvoid increase_local_var()\n{\n    int local_var = 0;\n    local_var++;\n    printf("local var called %d times\\n", local_var);\n}\n\nint main()\n{\n    increase_global_var();\n    increase_global_var();\n\n    increase_static_var();\n    increase_static_var();\n    \n    increase_local_var();\n    increase_local_var();\n    \n    return 0;\n}\n'})}),(0,r.jsx)(s.Z,{value:"C++",children:(0,r.jsx)(c.Z,{language:"cpp",title:"src/cpp/basics/07-static-storage.cpp",showLineNumbers:!0,children:'#include <iostream>\nusing namespace std;\n\n// variables declared in the file scope are static by default\n// and initialized to zero.\nint no_of_calls;\n\nvoid increase_count()\n{\n    no_of_calls++;\n    cout << "The function is called " << no_of_calls << " time(s)" << endl;\n}\n\nvoid increase_count_static()\n{\n    static int static_no_of_calls = 0;\n    // by default static objects are initialized to zero\n    // even if we initialize, it will be initialized only once\n    static_no_of_calls++;\n    cout << "The static function is called " << static_no_of_calls\n         << " time(s)" << endl;\n}\n\nvoid increase_count_volatile()\n{\n    int volatile_no_of_calls = 0;\n    volatile_no_of_calls++;\n    cout << "The volatile function is called " << volatile_no_of_calls\n         << " time(s)" << endl;\n}\n\nint main()\n{\n    increase_count();\n    increase_count();\n    cout << endl;\n\n    increase_count_static();\n    increase_count_static();\n    cout << endl;\n\n    increase_count_volatile();\n    increase_count_volatile();\n\n    return 0;\n}\n'})})]})}function v(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},5525:function(e,n,t){t.d(n,{Z:()=>i});var a=t(5893);t(7294);var r=t(7026);function i(e){let{children:n,hidden:t,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_Ymn6",i),hidden:t,children:n})}},7902:function(e,n,t){t.d(n,{Z:()=>m});var a=t(5893),r=t(7294),i=t(7026),l=t(9599),s=t(6550),c=t(2e3),o=t(4520),u=t(8341),d=t(6009);function f(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var v=t(7227);function _(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:c}=e,o=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),d=e=>{let n=e.currentTarget,t=c[o.indexOf(n)].value;t!==r&&(u(n),s(t))},f=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{let t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1]}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:c.map(e=>{let{value:n,label:t,attributes:l}=e;return(0,a.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{o.push(e)},onKeyDown:f,onClick:d,...l,className:(0,i.Z)("tabs__item","tabItem_LNqP",l?.className,{"tabs__item--active":r===n}),children:t??n},n)})})}function b(e){let{lazy:n,children:t,selectedValue:l}=e,s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=s.find(e=>e.props.value===l);return e?(0,r.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==l}))})}function h(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:a}=e,i=function(e){let{values:n,children:t}=e;return(0,r.useMemo)(()=>{let e=n??f(t).map(e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}),a=(0,u.lx)(e,(e,n)=>e.value===n.value);if(a.length>0)throw Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[l,v]=(0,r.useState)(()=>(function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let a=t.find(e=>e.default)??t[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:i})),[_,b]=function(e){let{queryString:n=!1,groupId:t}=e,a=(0,s.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(i),(0,r.useCallback)(e=>{if(!i)return;let n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})},[i,a])]}({queryString:t,groupId:a}),[h,m]=function(e){let{groupId:n}=e,t=n?`docusaurus.tab.${n}`:null,[a,i]=(0,d.Nk)(t);return[a,(0,r.useCallback)(e=>{t&&i.set(e)},[t,i])]}({groupId:a}),g=(()=>{let e=_??h;return p({value:e,tabValues:i})?e:null})();return(0,c.Z)(()=>{g&&v(g)},[g]),{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);v(e),b(e),m(e)},[b,m,i]),tabValues:i}}(e);return(0,a.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,a.jsx)(_,{...n,...e}),(0,a.jsx)(b,{...n,...e})]})}function m(e){let n=(0,v.Z)();return(0,a.jsx)(h,{...e,children:f(e.children)},String(n))}}}]);