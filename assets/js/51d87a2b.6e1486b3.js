"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([[395],{5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),l=a(6010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),l=a(7294),r=a(6010),o=a(2389),i=a(7392),s=a(7094),c=a(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:o,values:d,groupId:m,className:b}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,i.l)(g,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===o?o:o??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:y}=(0,s.U)(),[v,N]=(0,l.useState)(k),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,c.o5)();if(null!=m){const e=w[m];null!=e&&e!==v&&g.some((t=>t.value===e))&&N(e)}const I=e=>{const t=e.currentTarget,a=C.indexOf(t),n=g[a].value;n!==v&&(T(t),N(n),null!=m&&y(m,String(n)))},x=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const a=C.indexOf(e.currentTarget)+1;t=C[a]??C[0];break}case"ArrowLeft":{const a=C.indexOf(e.currentTarget)-1;t=C[a]??C[C.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},b)},g.map((e=>{let{value:t,label:a,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>C.push(e),onKeyDown:x,onClick:I},o,{className:(0,r.Z)("tabs__item",p,o?.className,{"tabs__item--active":v===t})}),a??t)}))),t?(0,l.cloneElement)(h.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function m(e){const t=(0,o.Z)();return l.createElement(d,(0,n.Z)({key:String(t)},e))}},8887:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>b,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var n=a(7462),l=(a(7294),a(3905)),r=a(5488),o=a(5162),i=a(6823);const s={title:"Hello world"},c=void 0,u={unversionedId:"basics/hello-world",id:"basics/hello-world",title:"Hello world",description:'We will learn through writing code. It is customary start with "Hello world!"',source:"@site/docs/basics/hello-world.mdx",sourceDirName:"basics",slug:"/basics/hello-world",permalink:"/c-cpp/basics/hello-world",draft:!1,editUrl:"https://github.com/pranabdas/c-cpp/blob/main/docs/basics/hello-world.mdx",tags:[],version:"current",frontMatter:{title:"Hello world"},sidebar:"docs",previous:{title:"Basics",permalink:"/c-cpp/category/basics"},next:{title:"Add two integers",permalink:"/c-cpp/basics/add-two-integers"}},p={},d=[],m={toc:d};function b(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,'We will learn through writing code. It is customary start with "Hello world!"\nprogram when learning a new programming language. This program simply prints a\nmessage in the terminal indicating the code ran successfully.'),(0,l.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"C",mdxType:"TabItem"},(0,l.kt)(i.Z,{language:"c",title:"src/c/basics/00-hello-world.c",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <stdio.h>\n\nint main()\n{\n    printf("Hello C!\\n");\n    return 0;\n}\n')),(0,l.kt)(o.Z,{value:"C++",mdxType:"TabItem"},(0,l.kt)(i.Z,{language:"cpp",title:"src/cpp/basics/00-hello-world.cpp",showLineNumbers:!0,mdxType:"CodeBlock"},'#include <iostream>\n#include <cstdio> // original c standard io to use printf\n\nint main()\n{\n    std::cout << "Hello C++!\\n";\n    // we can still use printf from c standard io\n    printf("Hello from c standard io printf.\\n");\n\n    return 0;\n}\n'))),(0,l.kt)("p",null,"Compile the code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# in case of C\ngcc filename.c\n\n# in case of C++\ng++ filename.cpp\n")),(0,l.kt)("p",null,"It will produce an executable (binary) file named ",(0,l.kt)("inlineCode",{parentName:"p"},"a.out"),". We can run the\nexecutable by typing:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"./a.out\n")),(0,l.kt)("p",null,"If you will to name your program something other than ",(0,l.kt)("inlineCode",{parentName:"p"},"a.out"),", you can specify\na custom name using ",(0,l.kt)("inlineCode",{parentName:"p"},"-o")," flag:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gcc filename.c -o my_program\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("ol",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ol"},"It is possible to include entire standard library in C++ (it is a feature of\ng++ compiler) by:")),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <bits/stdc++.h>\n")),(0,l.kt)("ol",{parentName:"admonition",start:2},(0,l.kt)("li",{parentName:"ol"},"Input and output streams can be made more efficient by including following in\nthe beginning of the (main) program:")),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"ios::sync_with_stdio(0);\ncin.tie(0);\n")),(0,l.kt)("ol",{parentName:"admonition",start:3},(0,l.kt)("li",{parentName:"ol"},"Use of newline ",(0,l.kt)("inlineCode",{parentName:"li"},"\\n")," is faster than ",(0,l.kt)("inlineCode",{parentName:"li"},"endl"),", because ",(0,l.kt)("inlineCode",{parentName:"li"},"endl")," always causes a\nflush operation."))))}b.isMDXComponent=!0}}]);