"use strict";(self.webpackChunkc_cpp=self.webpackChunkc_cpp||[]).push([[1709],{847:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>v,contentTitle:()=>m,default:()=>_,frontMatter:()=>h,metadata:()=>g,toc:()=>x});var i=t(4848),r=t(8453),a=t(1470),l=t(9365),s=t(1432);const u='#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n// compile: gcc file.c -lm\n\nint main()\n{\n    int ii;\n    double theta, result1, result2;\n\n    FILE *fp;\n    fp = fopen("results.dat", "w");\n    if (fp == NULL)\n    {\n        printf("File could not be created.\\n");\n        exit(1);\n    }\n\n    for (ii = 0; ii < 100; ii++)\n    {\n\n        theta = 4 * 3.14 * ii / 100;\n\n        if (theta == 0) // To avoid the 0/0 situation\n        {\n            theta = 0.000001;\n        }\n\n        result1 = sin(theta) / theta;\n        result2 = sin(2 * theta) / theta;\n\n        // printf("%f\\t%f\\n", theta, result);\n        fprintf(fp, "%f\\t%f\\t%f\\n", theta, result1, result2);\n    }\n    fclose(fp);\n    return 0;\n}\n',o='#include <iostream>\n#include <fstream>\nusing namespace std;\n\nint main()\n{\n    // ofstream is used to write to file\n    ofstream fp_out{"data.txt"};\n    // ofstream fp_out{"data.txt", ios::out};\n\n    if (!fp_out)\n    {\n        cerr << "File could not be created!\\n";\n        return 1;\n    }\n\n    for (int i = 1; i <= 10; i++)\n    {\n        fp_out << i << " " << i * i << endl;\n    }\n    \n    fp_out.close();\n    return 0;\n}\n',f='#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_SIZE 10\n\nvoid read_file(FILE *fp, int data[], int *size)\n{\n    *size = 0;\n    while (fscanf(fp, "%d", &data[*size]) == 1) \n    // fscanf returns 1 if success, 0 if fails\n    {\n        (*size)++;\n    }\n}\n\nvoid print_data(int data[], int size)\n{\n    int i;\n    for (i = 0; i < size; i++)\n    {\n        printf("%d\\n", data[i]);\n    }\n}\n\ndouble average(int data[], int size)\n{\n    int i;\n    double average = 0.0;\n\n    for (i = 0; i < size; i++)\n    {\n        average += data[i];\n    }\n\n    return (average / size);\n}\n\nint main()\n{\n    int i;\n    int size = MAX_SIZE;\n    FILE *fp;\n    int data[MAX_SIZE] = {0};\n\n    fp = fopen("file.dat", "r");\n    if (fp == NULL)\n    {\n        printf("File could not be opened.\\n");\n        exit(1);\n    }\n\n    read_file(fp, data, &size);\n\n    printf("My %d scores are:\\n", size);\n    print_data(data, size);\n\n    printf("Average score: %.2f\\n", average(data, size));\n    fclose(fp);\n    return 0;\n}\n',c='#include <iostream>\n#include <fstream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n    // ifstream is used to read from file\n    ifstream fp_in{"data.txt"};\n    // ifstream fp_in{"data.txt", ios::in};\n    if (!fp_in)\n    {\n        cerr << "File could not be opened for reading!\\n";\n        return 1;\n    }\n\n    while (fp_in)\n    {\n        string input_string;\n        getline(fp_in, input_string);\n        cout << input_string << endl;\n    }\n\n    fp_in.close();\n    return 0;\n}\n',d='#include <iostream>\n#include <fstream>\nusing namespace std;\n\nint main()\n{\n    // ofstream is used to write to file\n    ofstream fp_out{"data.txt"};\n\n    if (!fp_out)\n    {\n        cerr << "File could not be created!\\n";\n        return 1;\n    }\n\n    for (int i = 1; i <= 10; i++)\n    {\n        fp_out << i << " " << i * i << endl;\n    }\n    \n    fp_out.close();\n\n    // now we will open the file again to append more content\n    ofstream fp_app{"data.txt", ios::app};\n    // it is also possible to open the same fp_out\n    // fp_out.open("data.txt", ios::app};\n\n    if (!fp_app)\n    {\n        cerr << "File could not be created!\\n";\n        return 1;\n    }\n\n    for (int i = 11; i <= 15; i++)\n    {\n        fp_app << i << " " << i * i << endl;\n    }\n\n    fp_app.close();\n    return 0;\n}\n',p='#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int *base, x;\n    FILE *fp;\n\n    // allocate memory\n    base = (int *)malloc(sizeof(int) * 10);\n    if (base == NULL)\n    {\n        fprintf(stderr, "Failed to allocate memory.\\n");\n        exit(1);\n    }\n\n    // fill with values\n    for (x = 0; x < 10; x++)\n    {\n        *(base + x) = x * 10;\n    }\n\n    // open file\n    fp = fopen("numbers.bin", "w");\n    if (fp == NULL)\n    {\n        printf("File could not be created.\\n");\n        exit(1);\n    }\n\n    printf("%d\\n", *(base + 1));\n    // save buffer to file\n    int size;\n    size = fwrite(base, sizeof(int), 10, fp); \n    // this returns number of items\n    // the data is written in the binary format as it exit in the buffer\n    printf("%d\\n", size);\n    fclose(fp);\n    return 0;\n}\n',b='#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int *base, x, r;\n    FILE *fp;\n\n    // allocate buffer\n    base = (int *)malloc(sizeof(int) * 10);\n    if (base == NULL)\n    {\n        fprintf(stderr, "Error while allocating memory.\\n");\n        exit(1);\n    }\n\n    // open file\n    fp = fopen("numbers.bin", "r");\n    if (fp == NULL)\n    {\n        fprintf(stderr, "Error reading file.\\n");\n        exit(1);\n    }\n\n    // fill the buffer\n    r = fread(base, sizeof(int), 10, fp);\n    if (r != 10)\n    {\n        fprintf(stderr, "Could not read 10 numbers.\\n");\n        exit(1);\n    }\n\n    // print values from buffer\n    for (int i = 0; i < 10; i++)\n    {\n        printf("%d\\n", *(base + i));\n    }\n\n    return 0;\n}\n',h={title:"File Input Output",sidebar_label:"File IO basics"},m=void 0,g={id:"file-io/file-io",title:"File Input Output",description:"Write",source:"@site/docs/file-io/file-io.mdx",sourceDirName:"file-io",slug:"/file-io/",permalink:"/c-cpp/file-io/",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/c-cpp/blob/main/docs/file-io/file-io.mdx",tags:[],version:"current",frontMatter:{title:"File Input Output",sidebar_label:"File IO basics"},sidebar:"docs",previous:{title:"File IO",permalink:"/c-cpp/category/file-io"},next:{title:"Miscellaneous",permalink:"/c-cpp/category/miscellaneous"}},v={},x=[{value:"Write",id:"write",level:2},{value:"Read",id:"read",level:2},{value:"Append",id:"append",level:2},{value:"Save buffer",id:"save-buffer",level:2},{value:"Read buffer",id:"read-buffer",level:2}];function w(n){const e={h2:"h2",p:"p",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"write",children:"Write"}),"\n","\n",(0,i.jsxs)(a.A,{groupId:"language",children:[(0,i.jsx)(l.A,{value:"C",children:(0,i.jsx)(s.A,{language:"c",title:"src/c/file-io/01-write-file.c",showLineNumbers:!0,children:u})}),(0,i.jsx)(l.A,{value:"C++",children:(0,i.jsx)(s.A,{language:"cpp",title:"src/cpp/file-io/01-write-file.cpp",showLineNumbers:!0,children:o})})]}),"\n",(0,i.jsx)(e.h2,{id:"read",children:"Read"}),"\n",(0,i.jsxs)(a.A,{groupId:"language",children:[(0,i.jsx)(l.A,{value:"C",children:(0,i.jsx)(s.A,{language:"c",title:"src/c/file-io/02-read-file.c",showLineNumbers:!0,children:f})}),(0,i.jsx)(l.A,{value:"C++",children:(0,i.jsx)(s.A,{language:"cpp",title:"src/cpp/file-io/02-read-file.cpp",showLineNumbers:!0,children:c})})]}),"\n",(0,i.jsx)(e.h2,{id:"append",children:"Append"}),"\n","\n",(0,i.jsx)(s.A,{language:"cpp",title:"src/cpp/file-io/03-append-file.cpp",showLineNumbers:!0,children:d}),"\n",(0,i.jsx)(e.h2,{id:"save-buffer",children:"Save buffer"}),"\n",(0,i.jsx)(e.p,{children:"Saving and reading buffer as binary is faster than IO using formatted data."}),"\n","\n",(0,i.jsx)(s.A,{language:"cpp",title:"src/c/file-io/04-save-buffer.c",showLineNumbers:!0,children:p}),"\n",(0,i.jsx)(e.h2,{id:"read-buffer",children:"Read buffer"}),"\n","\n",(0,i.jsx)(s.A,{language:"cpp",title:"src/c/file-io/05-read-buffer.c",showLineNumbers:!0,children:b})]})}function _(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(w,{...n})}):w(n)}},9365:(n,e,t)=>{t.d(e,{A:()=>l});t(6540);var i=t(8215);const r={tabItem:"tabItem_Ymn6"};var a=t(4848);function l(n){let{children:e,hidden:t,className:l}=n;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,l),hidden:t,children:e})}},1470:(n,e,t)=>{t.d(e,{A:()=>I});var i=t(6540),r=t(8215),a=t(3104),l=t(6347),s=t(205),u=t(7485),o=t(1682),f=t(9466);function c(n){return i.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,i.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(n){const{values:e,children:t}=n;return(0,i.useMemo)((()=>{const n=e??function(n){return c(n).map((n=>{let{props:{value:e,label:t,attributes:i,default:r}}=n;return{value:e,label:t,attributes:i,default:r}}))}(t);return function(n){const e=(0,o.X)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function p(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function b(n){let{queryString:e=!1,groupId:t}=n;const r=(0,l.W6)(),a=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,u.aZ)(a),(0,i.useCallback)((n=>{if(!a)return;const e=new URLSearchParams(r.location.search);e.set(a,n),r.replace({...r.location,search:e.toString()})}),[a,r])]}function h(n){const{defaultValue:e,queryString:t=!1,groupId:r}=n,a=d(n),[l,u]=(0,i.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=t.find((n=>n.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:e,tabValues:a}))),[o,c]=b({queryString:t,groupId:r}),[h,m]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[r,a]=(0,f.Dv)(t);return[r,(0,i.useCallback)((n=>{t&&a.set(n)}),[t,a])]}({groupId:r}),g=(()=>{const n=o??h;return p({value:n,tabValues:a})?n:null})();(0,s.A)((()=>{g&&u(g)}),[g]);return{selectedValue:l,selectValue:(0,i.useCallback)((n=>{if(!p({value:n,tabValues:a}))throw new Error(`Can't select invalid tab value=${n}`);u(n),c(n),m(n)}),[c,m,a]),tabValues:a}}var m=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function x(n){let{className:e,block:t,selectedValue:i,selectValue:l,tabValues:s}=n;const u=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),f=n=>{const e=n.currentTarget,t=u.indexOf(e),r=s[t].value;r!==i&&(o(e),l(r))},c=n=>{let e=null;switch(n.key){case"Enter":f(n);break;case"ArrowRight":{const t=u.indexOf(n.currentTarget)+1;e=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(n.currentTarget)-1;e=u[t]??u[u.length-1];break}}e?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:s.map((n=>{let{value:e,label:t,attributes:a}=n;return(0,v.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:n=>u.push(n),onKeyDown:c,onClick:f,...a,className:(0,r.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":i===e}),children:t??e},e)}))})}function w(n){let{lazy:e,children:t,selectedValue:r}=n;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const n=a.find((n=>n.props.value===r));return n?(0,i.cloneElement)(n,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((n,e)=>(0,i.cloneElement)(n,{key:e,hidden:n.props.value!==r})))})}function _(n){const e=h(n);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(w,{...n,...e})]})}function I(n){const e=(0,m.A)();return(0,v.jsx)(_,{...n,children:c(n.children)},String(e))}}}]);